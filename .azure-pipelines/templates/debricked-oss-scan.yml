# File: templates/debricked-oss-scan.yml

# defaults for any parameters that aren't specified
parameters: 
- name: 'pool'
  type: object
  default: {}
- name: workingDirectory
  default: ''
- name: jdkVersion
  default: '17'
- name: jdkArch
  default: 'x64'
- name: debrickedToken

jobs:
- job: DebrickedOSSScan
  pool: ${{ parameters.pool }}
  steps:
  - task: Bash@3
    displayName: 'Linux: Set environment variables manually'
    condition: eq( variables['Agent.OS'], 'Linux' )
    inputs:
      targetType: 'inline'
      script: |
        cd ~
        echo "##vso[task.setvariable variable=HOME]$(pwd)"
        echo "##vso[task.setvariable variable=USER]$(whoami)"
        echo "##vso[task.setvariable variable=JAVA_HOME_17_X64]/usr/lib/jvm/java-17-openjdk-amd64"
        echo "##vso[task.setvariable variable=JAVA_HOME]/usr/lib/jvm/java-17-openjdk-amd64"
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: ${{ parameters.jdkVersion }}
      jdkArchitectureOption: ${{ parameters.jdkArch }}
      jdkSourceOption: PreInstalled
  - task: FcliInstaller@0
    inputs:
      version: 'latest'
  - task: PowerShell@2
    displayName: 'Install Debricked CLI'
    inputs:
      targetType: 'inline'
      script: |
        fcli tool debricked-cli install -y -d $(Build.SourcesDirectory)/debricked
        Write-Host "##vso[task.prependpath]$(Build.SourcesDirectory)/debricked/bin"
  - task: PowerShell@2
    displayName: 'Debricked OSS Scan'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "##[command]debricked scan . -e '*/**.lock' -e '**/node_modules/**'' -t ${env:DEBRICKED_TOKEN}"
        debricked callgraph -e "**/buid/classes/test/**"
        debricked scan . -e "*/**.lock" -e "**/node_modules/**" -t ""${env:DEBRICKED_TOKEN}""
      workingDirectory: ${{ parameters.workingDirectory }}
    env:
      DEBRICKED_TOKEN: ${{ parameters.debrickedToken }}